## 代理集合（获取机场订阅链接内的所有节点）
proxy-providers:
  🛫 Film机场:
    type: http
    ## 机场订阅链接，使用 Clash 链接
    url: "https://url.v1.mk/sub?target=clash&url=https%3A%2F%2Fyy.filmtoday.top%2Fapi%2Fv1%2Fclient%2Fsubscribe%3Ftoken%3D8700ee76951ca404c303b49b635231db&insert=false&config=https%3A%2F%2Fraw.githubusercontent.com%2FACL4SSR%2FACL4SSR%2Fmaster%2FClash%2Fconfig%2FACL4SSR_Online_Full_NoAuto.ini&emoji=true&list=false&xudp=false&udp=false&tfo=false&expand=true&scv=false&fdn=false&new_name=true"
    path: ./proxies/airport1.yaml
    interval: 86400
    ## 初步筛选需要的节点，可有效减轻路由器压力，支持正则表达式，不筛选可删除此配置项
    ## filter: "(?i)(🇭🇰|港|hk|hongkong|hong kong|🇹🇼|台|tw|taiwan|tai wan|🇯🇵|日|jp|japan|🇸🇬|新|sg|singapore|🇺🇸|美|us|unitedstates|united states)"
    ## 初步排除不需要的节点，支持正则表达式，若不排除可删除此配置项
    exclude-filter: "5x|5X|5倍率|4x|4X|3x|3X|客服|失联|官网|剩余|套餐"
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 600
    override:
      ## 为节点名称添加固定前缀，如节点名称原为“香港节点”会变成“🛫 机场订阅 1-香港节点”；推荐有多个机场时使用
      additional-prefix: "🛫 Film-"
      ## 为节点名称添加固定后缀，如节点名称原为“香港节点”会变成“香港节点-🛫 机场订阅 1”；推荐有多个机场时使用
      ## additional-suffix: "-🛫 机场订阅 1"
        
  🛫 Taishan机场:
    type: http
    url: "https://910.tsss123.cc/api/v1/client/subscribe?token=3a6550362c7fd09f050f129aa0e25b41&flag=clash"
    path: ./proxies/airport2.yaml
    interval: 43200
    ## filter: "(?i)(🇭🇰|港|hk|hongkong|hong kong|🇹🇼|台|tw|taiwan|tai wan|🇯🇵|日|jp|japan|🇸🇬|新|sg|singapore|🇺🇸|美|us|unitedstates|united states)"
    exclude-filter: "5x|5X|5倍率|4x|4X|3x|3X|客服|失联|官网|剩余|套餐"
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 600
    override:
      ## 为节点名称添加固定前缀，如节点名称原为“香港节点”会变成“🛫 机场订阅 2-香港节点”；推荐有多个机场时使用
      additional-prefix: "🛫 Taishan-"
      ## 为节点名称添加固定后缀，如节点名称原为“香港节点”会变成“香港节点-🛫 机场订阅 2”；推荐有多个机场时使用
      ## additional-suffix: "-🛫 机场订阅 2"

  🛫 Haita机场:
    type: http
    url: "https://su.bestyuns.com:8888/api/v1/client/subscribe?token=5684d8e40c2787781aa3d73adbccf874&flag=clash"
    path: ./proxies/airport3.yaml
    interval: 21600
    ## filter: "(?i)(🇭🇰|港|hk|hongkong|hong kong|🇹🇼|台|tw|taiwan|tai wan|🇯🇵|日|jp|japan|🇸🇬|新|sg|singapore|🇺🇸|美|us|unitedstates|united states)"
    exclude-filter: "5x|5X|5倍率|4x|4X|3x|3X|客服|失联|官网|剩余|套餐"
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 600
    override:
      ## 为节点名称添加固定前缀，如节点名称原为“香港节点”会变成“🛫 机场订阅 2-香港节点”；推荐有多个机场时使用
      additional-prefix: "🛫 Haita-"
      ## 为节点名称添加固定后缀，如节点名称原为“香港节点”会变成“香港节点-🛫 机场订阅 2”；推荐有多个机场时使用
      ## additional-suffix: "-🛫 机场订阅 2"


## 单个出站代理节点（以 vless 为例）
proxies:
   - {name: 🇺🇸 自建美国节点, server: root2.060315.xyz, port: 57566, reality-opts: {public-key: 3pcPXYstCacYdkDrlEli555wQ2aApC9D1X_KSKcbDVU, short-id: "cf90e81c" }, client-fingerprint: chrome, type: vless, uuid: 56a1b2fc-8e53-4a74-8e84-09c390e05284, tls: true, tfo: false, flow: xtls-rprx-vision, skip-cert-verify: false, servername: www.apple.com, network: tcp}


## 策略组
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
pr: &pr {type: select, proxies: [🇭🇰 香港节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇹🇼 台湾节点, 🇰🇷 韩国节点, 🇨🇦 加拿大节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇩🇪 德国节点, 🇳🇱 荷兰节点, 🇹🇷 土耳其节点, 🇷🇺 俄罗斯节点, 🇻🇳 越南节点, 🇮🇳 印度节点, 🇦🇺 澳大利亚节点, 🇦🇷 阿根廷节点, 🇺🇦 乌克兰节点, 其他国家节点, 🚀 节点选择, ♻️ 自动选择, 🎯 全球直连]}
proxy-groups:
  ## 手动选择国家或地区节点；根据“国家或地区策略组”名称对 `proxies` 值进行增删改，须一一对应
  - {name: 🚀 节点选择, type: select, include-all: true}
  - {name: 🚀 GFW选择, <<: *pr}
  ## 若在面板 dashboard 中需隐藏该策略组，可添加 `hidden: true` 配置项
  - {name: 🎯 全球直连, type: select, proxies: [DIRECT], hidden: true}
  - {name: ♻️ 自动选择, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "^((?!(直连)).)*$"}
  - {name: 🚀 GitHub, <<: *pr}
  - {name: ⚡ 自定义代理, <<: *pr}
  - {name: 💰 Bybit, <<: *pr}
  - {name: 💳 Paypal, <<: *pr}
  #即时通讯包括了 Telegram/WhatsApp/Line 等海外主流即时通讯软件域名
  - {name: 💬 即时通讯, <<: *pr}
  #社交媒体包括了 Twitter(X)/Facebook/Instagram 等海外主流社交媒体
  - {name: 🌐 社交媒体, <<: *pr}
  - {name: 🤖 ChatGPT, <<: *pr}
  - {name: 🤖 Copilot, <<: *pr}
  - {name: 🤖 AI服务, <<: *pr}
  - {name: 🎶 TikTok, <<: *pr}
  - {name: 📹 YouTube, <<: *pr}
  - {name: 🎥 Netflix, <<: *pr}
  - {name: 🎥 DisneyPlus, <<: *pr}
  - {name: 🎥 HBO, <<: *pr}
  - {name: 🎥 PrimeVideo, <<: *pr}
  - {name: 🎥 AppleTV+, <<: *pr}
  - {name: 🎥 Emby, <<: *pr}
  - {name: 🎻 Spotify, <<: *pr}
  - {name: 📺 Bahamut, type: select, proxies: [🇹🇼 台湾节点, 🚀 节点选择, 🎯 全球直连]}
  - {name: 🌎 国外媒体, <<: *pr}
  - {name: 🛒 国外电商, <<: *pr}
  - {name: 📢 谷歌FCM, <<: *pr}
  - {name: 🇬 谷歌服务, <<: *pr}
  - {name: 🍎 苹果服务, <<: *pr}
  - {name: Ⓜ️ 微软服务, <<: *pr}
  - {name: 🎮 游戏平台, <<: *pr}
  - {name: 🎮 Steam, <<: *pr}
  - {name: 🚀 测速工具, type: select, include-all: true}
  - {name: 🐟 漏网之鱼, <<: *pr}



  ## ----------------国家或地区策略组---------------------
  ## 自动选择节点，即按照 url 测试结果使用延迟最低的节点；测试后容差大于 50ms 才会切换到延迟低的那个节点；筛选出“香港”节点，支持正则表达式
  ###- {name: 🇭🇰 香港节点, type: url-test, tolerance: 50, use: [🛫 机场订阅 1, 🛫 机场订阅 2], filter: "(?i)(🇭🇰|港|hk|hongkong|hong kong)"}
  ## 节点负载均衡，即将请求均匀分配到多个节点上，优点是更稳定，速度可能有提升；将相同顶级域名的请求分配给策略组内的同一个代理节点；推荐在节点复用比较多的情况下使用
  ###- {name: 🇹🇼 台湾节点, type: load-balance, strategy: consistent-hashing, use: [🛫 机场订阅 1, 🛫 机场订阅 2], filter: "(?i)(🇹🇼|台|tw|taiwan|tai wan)"}
  ## 可使用 `include-all-providers: true` 代替 `use: [🛫 机场订阅 1, 🛫 机场订阅 2, ...]`，意思为引入所有代理集合
  ###- {name: 🇯🇵 日本节点, type: url-test, tolerance: 50, include-all-providers: true, filter: "(?i)(🇯🇵|日|jp|japan)"}
  ###- {name: 🇸🇬 新加坡节点, type: url-test, tolerance: 50, use: [🛫 机场订阅 1, 🛫 机场订阅 2], filter: "(?i)(🇸🇬|新|sg|singapore)"}
  ###- {name: 🇺🇸 美国节点, type: url-test, tolerance: 50, use: [🛫 机场订阅 1, 🛫 机场订阅 2], filter: "(?i)(🇺🇸|美|us|unitedstates|united states)"}
  - {name: 🇭🇰 香港节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(港|HK|hk|Hong Kong|HongKong|hongkong|深港)"}
  - {name: 🇺🇸 美国节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(美|波特兰|美国|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|UnitedStates)"}
  - {name: 🇯🇵 日本节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan|🇯🇵)"}
  - {name: 🇸🇬 新加坡节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(新加坡|坡|狮城|SG|Singapore)"}
  - {name: 🇹🇼 台湾节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(台|新北|台湾|彰化|TW|Taiwan)"}
  - {name: 🇰🇷 韩国节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(KR|Korea|KOR|首尔|韩|韓)"}
  - {name: 🇨🇦 加拿大节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(加拿大|Canada|渥太华|温哥华|卡尔加里)"}
  - {name: 🇬🇧 英国节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(英国|Great Britain|GB)"}
  - {name: 🇫🇷 法国节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(FR|法国|France|巴黎)"}
  - {name: 🇩🇪 德国节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(德国|Germany|柏林|法兰克福)"}
  - {name: 🇳🇱 荷兰节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(荷兰|Netherlands|阿姆斯特丹)"}
  - {name: 🇷🇺 俄罗斯节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(RU|俄罗斯)"}
  - {name: 🇹🇷 土耳其节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(土耳其|Turkey|Türkiye)"}
  - {name: 🇮🇳 印度节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(印度|India|新德里|孟买)"}
  - {name: 🇻🇳 越南节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(越南|Vietnam)"}
  - {name: 🇦🇺 澳大利亚节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(AU|澳大利亚)"}
  - {name: 🇦🇷 阿根廷节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(AR|阿根廷)"}
  - {name: 🇺🇦 乌克兰节点, type: url-test, include-all: true, tolerance: 20, interval: 300, filter: "(?i)(UA|乌克兰)"}
  - {name: 其他国家节点, type: select, include-all: true, filter: "(?i)(MK|PL|TR|FI|NG|LU)"}

## 规则集（yaml 文件每天自动更新）
rule-providers:
  private:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/private.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/private.mrs"
    interval: 86400

  ads:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/ads.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/ads.mrs"
    interval: 86400

  trackerslist:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/trackerslist.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/trackerslist.mrs"
    interval: 86400

  media:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/media.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/media.mrs"
    interval: 86400

  games:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/games.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/games.mrs"
    interval: 86400

  ai:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/ai.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/ai.mrs"
    interval: 86400

  networktest:
    type: http
    behavior: classical
    format: text
    path: ./rules/networktest.list
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/networktest.list"
    interval: 86400

  tld-proxy:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/tld-proxy.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/tld-proxy.mrs"
    interval: 86400

  proxy:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/proxy.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/proxy.mrs"
    interval: 86400

  mediaip:
    type: http
    behavior: ipcidr
    format: mrs
    path: ./rules/mediaip.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/mediaip.mrs"
    interval: 86400

  gamesip:
    type: http
    behavior: ipcidr
    format: mrs
    path: ./rules/gamesip.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/gamesip.mrs"
    interval: 86400

  telegramip:
    type: http
    behavior: ipcidr
    format: mrs
    path: ./rules/telegramip.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/telegramip.mrs"
    interval: 86400

## 规则
rules:
  - RULE-SET,private,🔒 私有网络
  - RULE-SET,ads,🛑 广告域名
  - RULE-SET,trackerslist,📋 Trackerslist
  - RULE-SET,media,🌍 国外媒体
  - RULE-SET,games,🎮 游戏平台
  - RULE-SET,ai,🤖 人工智能
  - RULE-SET,networktest,📈 网络测试
  - RULE-SET,tld-proxy,🧱 代理域名
  - RULE-SET,proxy,🧱 代理域名
  - RULE-SET,mediaip,🌍 国外媒体,no-resolve
  - RULE-SET,gamesip,🎮 游戏平台,no-resolve
  - RULE-SET,telegramip,📲 电报消息,no-resolve
  - MATCH,🐟 漏网之鱼
